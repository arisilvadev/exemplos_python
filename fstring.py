# teste = 'Ari ari'
# # print(teste.capitalize())#capitalize: p√µe a primeira letra em mai√∫scula
# # print(teste.upper())#upper: p√µe o conte√∫do da vari√°vel todo em maiuscula
# # print(teste.casefold())#casefold: p√µe o conte√∫do da vari√°vel todo em min√∫scula
# # print(len(teste))#len: verifica a quantidade de caracteres
# # print(teste[:3])#√≠ndice inicial e final
# # print(teste[::-1])#nome de tr√°s para frente
# # print(teste[0:3])#√≠ndice inicial e √≠ndice final
# # print(teste.zfill(20))
# # print(f'{teste:-^40}')
# print('a' in teste)
# print('A' in teste)#in: verifica se o item ou letra est√° contido
# # print(teste.startswith('t'))
# # print(teste.startswith('a'))#startswith: come√ßa com
# print(teste.endswith('i'))#endswith: termina com
#import os -- os.system('cls'): para limpar a tela √† cada itera√ß√£o do programa
#if operacao not in operadores_permitidos:
        # print('Operador inv√°lido!')
        # continue: in ou not in para analisar se determinado caracter est√° ou n√£o contido da vari√°vel
#import time:
    # time.sleep(5): determina o tempo para executar a pr√≥xima a√ß√£o
# print(teste.count('carro'))#conta quantas vezes a palavra apareceu no texto

# texto = 'Python' para exibir na tela letra e n√∫mero correspondente

# i = 0
# tamanho_string = len(texto)

# while i < tamanho_string:
#     print(texto[i], i)
#     i += 1
    
# texto = 'fim do programa'

# novo_texto = ''

# for letra in texto:
#     novo_texto += f'*{letra}'
#     print(letra)
# print(novo_texto)

#import random = random.randint(1,60) para retornar um n√∫mero inteiro aleat√≥rio entre 1 e 100

# #fun√ß√£o RANGE (start, stop, step) ou (onde come√ßa, onde termina e intervalos)
# numeros = range(0,11, 1)

# for numero in numeros:#l√™-se: para cada NUMERO em N√öMEROS fa√ßa:
#     print(numero, end=' * ')#end altera o valor padr√£o do end(\n) que √© quebra de linha

# import random #usado para sortear algo
# import string #usado para sortear algo do objeto string

# letra = random.choice(string.ascii_uppercase) #string.ascii usa o alfabeto de a √† z
#                                             #uppercase = mai√∫sculas e lowercase = min√∫sculas
# print("Letra sorteada:", letra)


# for i in range(1,11):
#     if i %2==0:
#         print(f'{i} √© par!') #para exibir apenas os n√∫meros pares da sequ√™ncia

#PARA GARANTIR APENAS LETRAS E ESPA√áOS:
# while not all(parte.isalpha() for parte in aluno.split()):#parte.isalpha garante apenas letras 
#                                                         #.split garante letras com espa√ßos
#         print("Entrada inv√°lida! Digite apenas letras, sem n√∫meros ou s√≠mbolos.")
#         aluno = input("Tente novamente: ")


#EXEMPLO ANINHAMENTO DE FOR:
# for i in range(1,6):
#     for j in range(1,6):
#         if (i + j) % 2==0:
#             print(f'{i} + {j} √© PAR!')
#         else:
#             print(f'{i} + {j} √© √çMPAR!')

#manipula√ß√£o de strings

# frase = input("Digite uma frase: ")

# print("Mai√∫sculas:", frase.upper())
# print("Min√∫sculas:", frase.lower())
# print("Capitalizado:", frase.title())

#fun√ß√£o SUM para somar os itens de uma lista, tupla, etc (APENAS N√öMEROS)
# gastos_joao = [300, 500, 200, 800]
# gastos_pedro = [200, 400, 500, 700]

# total_joao = sum(gastos_joao)
# total_pedro = sum(gastos_pedro)
# print(total_pedro)
# print(total_joao)

#DETERMINAR MAIOR N√öMERO EM UM INTERVALO
# Em Python, float('-inf') representa o valor menos infinito, 
# ou seja, o menor n√∫mero poss√≠vel que pode ser representado com ponto flutuante.

# üí° Por que usar isso como valor inicial ao procurar o maior n√∫mero?
# Porque garante que qualquer n√∫mero digitado pelo usu√°rio ser√° maior do que esse valor.

# Assim, na primeira compara√ß√£o, o n√∫mero do usu√°rio sempre "vence" e atualiza a vari√°vel maior.

# maior = float('-inf')  # Come√ßa com o menor valor poss√≠vel

# for i in range(5):
#     numero = float(input(f"Digite o {i + 1}¬∫ n√∫mero: "))
    
#     if numero > maior:
#         maior = numero

# print(f"\nO maior n√∫mero digitado foi: {maior}")

